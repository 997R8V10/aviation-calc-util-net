# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    # Arch Matrix
    strategy:
      fail-fast: false
      matrix:
        #arch: [x64, x86, arm, arm64]
        arch: [x64, x86]
        os: [macos-latest, windows-latest, ubuntu-latest]
        configuration: [Debug, Release]
        include:
          - os: macos-latest
            short-os: osx
          - os: windows-latest
            short-os: win
          - os: ubuntu-latest
            short-os: linux
        exclude:
          #- os: windows-latest
          #  arch: arm
          #- os: windows-latest
          #  arch: arm64
          - os: ubuntu-latest
            arch: x86
          - os: macos-latest
            arch: x86
          #- os: macos-latest
          #  arch: arm
          #- os: macos-latest
          #  arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.x.x
    - uses: nuget/setup-nuget@v1
      with:
        nuget-version: 'latest'
    - name: Build and Test
      run: dotnet test --verbosity normal -c ${{ matrix.configuration }} -r ${{ matrix.short-os }}-${{ matrix.arch }}
    - name: Pack NuGet Package
      if: ${{ matrix.configuration == 'Release' }}
      run: dotnet pack AviationCalcUtilNet.csproj --runtime ${{ matrix.short-os }}-${{ matrix.arch }} -c ${{ matrix.configuration }} -o out\nuget --include-symbols
    - name: Publish NuGet Package
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/master')}}
      run: |
        nuget push out\nuget\**\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}
        nuget push out\nuget\**\*.snupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}
